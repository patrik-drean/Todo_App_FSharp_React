{"ast":null,"code":"var _jsxFileName = \"/Users/patrik-drean/dev/fsharp/todo/TodoApp/ClientApp/src/componets/TaskList.js\";\nimport React from 'react';\nimport Task from './Task';\nimport Form from './Form';\n\nasync function fetchAllTasks() {\n  let response = await fetch('api/Tasks');\n  let data = await response.json();\n  return data;\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: []\n    };\n    fetchAllTasks();\n  }\n\n  render() {\n    let deleteTask = idToDelete => {\n      let updatedTasks = this.state.tasks.filter(task => {\n        return task.id !== idToDelete;\n      });\n      this.setState({\n        tasks: updatedTasks\n      });\n    };\n\n    let addTask = taskDescription => {\n      let tasks = this.state.tasks;\n      let newTask = {\n        id: tasks.length,\n        description: taskDescription\n      };\n      console.log('new task', newTask); //   console.log(tasks.push(newTask));\n\n      this.setState({\n        tasks: [...tasks, newTask]\n      });\n    }; // let editTask = (idToEdit) => {\n    //     let updatedTasks = this.state.tasks.filter(function (task) {\n    //         if (task.id !== idToEdit) {\n    //         }\n    //     });\n    //     this.setState({tasks: updatedTasks});\n    // }\n\n\n    let taskComponentList = this.state.tasks.map(task => React.createElement(Task, Object.assign({}, task, {\n      key: task.id,\n      deleteTask: deleteTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, taskComponentList, React.createElement(Form, {\n      addTask: addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TaskList;","map":{"version":3,"sources":["/Users/patrik-drean/dev/fsharp/todo/TodoApp/ClientApp/src/componets/TaskList.js"],"names":["React","Task","Form","fetchAllTasks","response","fetch","data","json","TaskList","Component","constructor","props","state","tasks","render","deleteTask","idToDelete","updatedTasks","filter","task","id","setState","addTask","taskDescription","newTask","length","description","console","log","taskComponentList","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAeC,aAAf,GAA+B;AAC7B,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,CAA1B;AACA,MAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AAEA,SAAOD,IAAP;AACD;;AAED,MAAME,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAIAV,IAAAA,aAAa;AAEd;;AAEDW,EAAAA,MAAM,GAAG;AACP,QAAIC,UAAU,GAAGC,UAAU,IAAI;AAC7B,UAAIC,YAAY,GAAG,KAAKL,KAAL,CAAWC,KAAX,CAAiBK,MAAjB,CAAwBC,IAAI,IAAI;AACjD,eAAOA,IAAI,CAACC,EAAL,KAAYJ,UAAnB;AACD,OAFkB,CAAnB;AAIA,WAAKK,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEI;AAAT,OAAd;AACD,KAND;;AAQA,QAAIK,OAAO,GAAGC,eAAe,IAAI;AAC/B,UAAIV,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACA,UAAIW,OAAO,GAAG;AAAEJ,QAAAA,EAAE,EAAEP,KAAK,CAACY,MAAZ;AAAoBC,QAAAA,WAAW,EAAEH;AAAjC,OAAd;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,OAAxB,EAH+B,CAI/B;;AACA,WAAKH,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,EAAWW,OAAX;AAAT,OAAd;AACD,KAND,CATO,CAiBP;AACA;AACA;AAEA;AACA;AAEA;AACA;;;AAEA,QAAIK,iBAAiB,GAAG,KAAKjB,KAAL,CAAWC,KAAX,CAAiBiB,GAAjB,CAAqBX,IAAI,IAC/C,oBAAC,IAAD,oBAAUA,IAAV;AAAgB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,MAAA,UAAU,EAAEL,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADsB,CAAxB;AAIA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGc,iBADH,EAEE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAEP,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAjDoC;;AAoDvC,eAAed,QAAf","sourcesContent":["import React from 'react';\nimport Task from './Task';\nimport Form from './Form';\n\nasync function fetchAllTasks() {\n  let response = await fetch('api/Tasks');\n  let data = await response.json();\n  \n  return data;\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tasks: []\n    };\n\n    fetchAllTasks();\n    \n  }\n  \n  render() {\n    let deleteTask = idToDelete => {\n      let updatedTasks = this.state.tasks.filter(task => {\n        return task.id !== idToDelete;\n      });\n\n      this.setState({ tasks: updatedTasks });\n    };\n\n    let addTask = taskDescription => {\n      let tasks = this.state.tasks;\n      let newTask = { id: tasks.length, description: taskDescription };\n      console.log('new task', newTask);\n      //   console.log(tasks.push(newTask));\n      this.setState({ tasks: [...tasks, newTask] });\n    };\n\n    // let editTask = (idToEdit) => {\n    //     let updatedTasks = this.state.tasks.filter(function (task) {\n    //         if (task.id !== idToEdit) {\n\n    //         }\n    //     });\n\n    //     this.setState({tasks: updatedTasks});\n    // }\n\n    let taskComponentList = this.state.tasks.map(task => (\n      <Task {...task} key={task.id} deleteTask={deleteTask} />\n    ));\n\n    return (\n      <React.Fragment>\n        {taskComponentList}\n        <Form addTask={addTask} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}