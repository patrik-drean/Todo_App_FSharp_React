{"ast":null,"code":"var _jsxFileName = \"/Users/patrik-drean/dev/fsharp/todo/TodoApp/ClientApp/src/componets/TaskList.js\";\nimport React from 'react';\nimport Task from './Task';\nimport Form from './Form';\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    fetch('api/Tasks').then(response => response.json()).then(data => {\n      this.setState({\n        tasks: data,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    let deleteTask = idToDelete => {\n      let updatedTasks = this.state.tasks.filter(task => {\n        return task.id !== idToDelete;\n      });\n      this.setState({\n        tasks: updatedTasks\n      });\n    };\n\n    let addTask = taskDescription => {\n      let tasks = this.state.tasks;\n      let newTask = {\n        id: tasks.length,\n        description: taskDescription\n      };\n      console.log('new task', newTask); //   console.log(tasks.push(newTask));\n\n      this.setState({\n        tasks: [...tasks, newTask]\n      });\n    }; // let editTask = (idToEdit) => {\n    //     let updatedTasks = this.state.tasks.filter(function (task) {\n    //         if (task.id !== idToEdit) {\n    //         }\n    //     });\n    //     this.setState({tasks: updatedTasks});\n    // }\n\n\n    let taskComponentList = this.state.tasks.map(task => React.createElement(Task, Object.assign({}, task, {\n      key: task.id,\n      deleteTask: deleteTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, taskComponentList, React.createElement(Form, {\n      addTask: addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TaskList;","map":{"version":3,"sources":["/Users/patrik-drean/dev/fsharp/todo/TodoApp/ClientApp/src/componets/TaskList.js"],"names":["React","Task","Form","TaskList","Component","constructor","props","fetch","then","response","json","data","setState","tasks","loading","render","deleteTask","idToDelete","updatedTasks","state","filter","task","id","addTask","taskDescription","newTask","length","description","console","log","taskComponentList","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEAC,IAAAA,KAAK,CAAC,WAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEF,IAAT;AAAeG,QAAAA,OAAO,EAAE;AAAxB,OAAd;AACL,KAJD;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,UAAU,GAAGC,UAAU,IAAI;AAC7B,UAAIC,YAAY,GAAG,KAAKC,KAAL,CAAWN,KAAX,CAAiBO,MAAjB,CAAwBC,IAAI,IAAI;AACjD,eAAOA,IAAI,CAACC,EAAL,KAAYL,UAAnB;AACD,OAFkB,CAAnB;AAIA,WAAKL,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEK;AAAT,OAAd;AACD,KAND;;AAQA,QAAIK,OAAO,GAAGC,eAAe,IAAI;AAC/B,UAAIX,KAAK,GAAG,KAAKM,KAAL,CAAWN,KAAvB;AACA,UAAIY,OAAO,GAAG;AAAEH,QAAAA,EAAE,EAAET,KAAK,CAACa,MAAZ;AAAoBC,QAAAA,WAAW,EAAEH;AAAjC,OAAd;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,OAAxB,EAH+B,CAI/B;;AACA,WAAKb,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,EAAWY,OAAX;AAAT,OAAd;AACD,KAND,CATO,CAiBP;AACA;AACA;AAEA;AACA;AAEA;AACA;;;AAEA,QAAIK,iBAAiB,GAAG,KAAKX,KAAL,CAAWN,KAAX,CAAiBkB,GAAjB,CAAqBV,IAAI,IAC/C,oBAAC,IAAD,oBAAUA,IAAV;AAAgB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,MAAA,UAAU,EAAEN,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADsB,CAAxB;AAIA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGc,iBADH,EAEE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAEP,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAjDoC;;AAoDvC,eAAepB,QAAf","sourcesContent":["import React from 'react';\nimport Task from './Task';\nimport Form from './Form';\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    fetch('api/Tasks')\n        .then(response => response.json())\n        .then(data => {\n          this.setState({ tasks: data, loading: false });\n    });\n    \n  }\n\n  render() {\n    let deleteTask = idToDelete => {\n      let updatedTasks = this.state.tasks.filter(task => {\n        return task.id !== idToDelete;\n      });\n\n      this.setState({ tasks: updatedTasks });\n    };\n\n    let addTask = taskDescription => {\n      let tasks = this.state.tasks;\n      let newTask = { id: tasks.length, description: taskDescription };\n      console.log('new task', newTask);\n      //   console.log(tasks.push(newTask));\n      this.setState({ tasks: [...tasks, newTask] });\n    };\n\n    // let editTask = (idToEdit) => {\n    //     let updatedTasks = this.state.tasks.filter(function (task) {\n    //         if (task.id !== idToEdit) {\n\n    //         }\n    //     });\n\n    //     this.setState({tasks: updatedTasks});\n    // }\n\n    let taskComponentList = this.state.tasks.map(task => (\n      <Task {...task} key={task.id} deleteTask={deleteTask} />\n    ));\n\n    return (\n      <React.Fragment>\n        {taskComponentList}\n        <Form addTask={addTask} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}